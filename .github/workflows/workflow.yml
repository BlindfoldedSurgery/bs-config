name: Workflow
on:
  push:
    branches: [ main ]
    tags:
      - v**
  pull_request: { }

jobs:
  lint:
    strategy:
      matrix:
        pyversion: [ "3.11", "3.10" ]
    container: python:${{ matrix.pyversion }}-slim
    runs-on: ubuntu-latest
    steps:
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - uses: actions/checkout@v4
      - run: poetry install
      - name: Check coding standards
        run: |
          poetry run ruff check src/
          poetry run black --check src/
          poetry run mypy src/

  test:
    strategy:
      matrix:
        pyversion: [ "3.11", "3.10" ]
    container: python:${{ matrix.pyversion }}-slim
    runs-on: ubuntu-latest
    steps:
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - uses: actions/checkout@v4
      - run: poetry install
      - name: Run tests
        run: poetry run pytest src/

  publish_package:
    runs-on: ubuntu-latest
    container: python:3.9-slim
    needs:
      - lint
      - test
    if: success() && startsWith(github.ref, 'refs/tags/v')
    env:
      POETRY_HTTP_BASIC_PYPI_BS_USERNAME: ${{ vars.PYPI_USERNAME }}
      POETRY_HTTP_BASIC_PYPI_BS_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    steps:
      - name: Install Poetry
        run: pip install poetry==1.6.1
      - uses: actions/checkout@v4
      - run: poetry install
      - name: Build project
        run: poetry build
      - name: Upload to pypi registry
        run: poetry publish -r pypi-bs
